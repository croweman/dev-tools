#!/bin/bash

set -e

####################################################
# SETUP START
#
# jq is a dependency which will need to be installed
#   https://stedolan.github.io/jq/  osx
#   - copy file to /usr/local/bin
#   - make file executable
#     chmod +x jq
#
# global git hooks setup
#  - git config --global init.templatedir '~/.git-templates'
#  - mkdir -p ~/.git-templates/hooks
#  - create ~/.git-templates/hooks/pre-commit file and populate it with this script
#  - make file executable
#      chmod a+x ~/.git-templates/hooks/pre-commit
#  - reinitialise each relevant git hub repo that should use the pre-commit hook
#      git init
#      the git-init.sh bash script can be executed in a parent directory to reinitialise all child folders that have a .git folder
#
# SETUP END
####################################################

if [ ! -f ./deploy/metadata.json ]; then
    exit
fi

if [ ! -f ~/deployment-metadata.json ]; then
    echo {} >> ~/deployment-metadata.json
fi

product=($(jq -r '.product' ./deploy/metadata.json))
service=($(jq -r '.service' ./deploy/metadata.json))
productAndService=${product}_${service}

if [ "$product" ] && [ "$service" ]; then

    existence=($(jq -r '.'${productAndService}'' ~/deployment-metadata.json))

    if [ $existence = "1" ]; then
        exit
    fi

fi

currentVersion=($(jq -r '.version' ./deploy/metadata.json))
lastVersionPart="${currentVersion##*.}"
lastVersionPart=$((lastVersionPart + 1))
newVersion=${currentVersion%.*}.${lastVersionPart}

jq '.version="'${newVersion}'"' ./deploy/metadata.json > tmp.$$.json && mv tmp.$$.json ./deploy/metadata.json
git add ./deploy/metadata.json

jq .${productAndService}=\"1\" ~/deployment-metadata.json > tmp.$$.json && mv tmp.$$.json ~/deployment-metadata.json